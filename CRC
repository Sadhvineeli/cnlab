#include<stdio.h> 
void division(int temp[], int gen[], int n, int r) { 
 for (int i = 0; i < n; i++) { 
 if (temp[i] == 1) { 
 for (int j = 0; j <= r; j++) { 
 temp[i + j] = temp[i + j] ^ gen[j]; 
 } 
 } 
 } 
} 
int main() { 
 int n, r, message[50], gen[50], temp[50]; 
 printf("Enter the number of frame bits: "); 
 scanf("%d", &n); 
 printf("Enter the frame: "); 
 for (int i = 0; i < n; i++) 
 scanf("%d", &message[i]); 
 printf("Enter the number of generator bits: "); 
 scanf("%d", &r); 
 printf("Enter the generator: "); 
 for (int i = 0; i < r; i++) 
 scanf("%d", &gen[i]); 
 // Append r-1 zeros to the message (for CRC calculation) 
 for (int i = 0; i < r - 1; i++) 
 message[n + i] = 0; 
 // Copy message to temp array 
 for (int i = 0; i < n + r - 1; i++) 
 temp[i] = message[i]; 
 // Perform division 
 division(temp, gen, n, r - 1); 
 // Print CRC bits (remainder) 
 printf("CRC: "); 
 for (int i = 0; i < r - 1; i++) { 
 printf("%d ", temp[n + i]); 
 message[n + i] = temp[n + i]; // Append CRC to message 
 } 
 printf("\n"); 
 // Transmitted message (message + CRC) 
 printf("Transmitted Message: "); 
 for (int i = 0; i < n + r - 1; i++) 
 printf("%d ", message[i]); 
 printf("\n"); 
 // Decoding the message (checking for errors) 
 printf("Decoding...\n"); 
 for (int i = 0; i < n + r - 1; i++) 
 temp[i] = message[i]; 
 division(temp, gen, n, r - 1); 
 // Check if there's any error 
 for (int i = 0; i < r - 1; i++) { 
 if (temp[n + i]) { 
 printf("Error detected in received message.\n"); 
 return 0; 
 } 
 }
printf("No error in received message.\n"); 
 // Print decoded message 
 printf("Received Message: "); 
 for (int i = 0; i < n; i++) 
 printf("%d ", message[i]); 
 printf("\n"); 
 return 0; 
}
